//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KrautsynchBot {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Config {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Config() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KrautsynchBot.Config", typeof(Config).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die KrautsynchBot ähnelt.
        /// </summary>
        internal static string Bot_Username {
            get {
                return ResourceManager.GetString("Bot_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 20 ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_CheckInterval {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_CheckInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die chat-msg- ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_Contains_ClassName {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_Contains_ClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die image-embed ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_Image_Embeded_ClassName {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_Image_Embeded_ClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die rotor ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_Image_Embeded_Rotor_ClassName {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_Image_Embeded_Rotor_ClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 200 ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_SendInterval {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_SendInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die timestamp ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_Timestamp_ClassName {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_Timestamp_ClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die username ähnelt.
        /// </summary>
        internal static string ChatWrapper_ChatMessage_Username_ClassName {
            get {
                return ResourceManager.GetString("ChatWrapper_ChatMessage_Username_ClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  nick-hover ähnelt.
        /// </summary>
        internal static string ChatWrapper_DocumentHash_NickHover_Class {
            get {
                return ResourceManager.GetString("ChatWrapper_DocumentHash_NickHover_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die help;hilfe ähnelt.
        /// </summary>
        internal static string CommandHandler_Help_Messages {
            get {
                return ResourceManager.GetString("CommandHandler_Help_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ! ähnelt.
        /// </summary>
        internal static string CommandHandler_Message_StartTag {
            get {
                return ResourceManager.GetString("CommandHandler_Message_StartTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die krautster;armbernd;Freilaurer;melli17;reflahey;berndboy2;dasistkeinname;Lolibunny;RenDom;kohlio;Xaekai ähnelt.
        /// </summary>
        internal static string CommandHandler_Moderatoren {
            get {
                return ResourceManager.GetString("CommandHandler_Moderatoren", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me ignoriert ab sofort [username] /soeinfach ähnelt.
        /// </summary>
        internal static string CommandHandler_Mute_IgnoreMessage {
            get {
                return ResourceManager.GetString("CommandHandler_Mute_IgnoreMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me ignoriert im Moment [usernames] ähnelt.
        /// </summary>
        internal static string CommandHandler_Mute_ListMessage {
            get {
                return ResourceManager.GetString("CommandHandler_Mute_ListMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me ignoriert [username] ab sofort nicht mehr. ähnelt.
        /// </summary>
        internal static string CommandHandler_Mute_UnignoreMessage {
            get {
                return ResourceManager.GetString("CommandHandler_Mute_UnignoreMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die false;aus ähnelt.
        /// </summary>
        internal static string CommandHandler_Plugin_Disabled_Arguments {
            get {
                return ResourceManager.GetString("CommandHandler_Plugin_Disabled_Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Der [command]-Command ist nun ausgeschaltet ähnelt.
        /// </summary>
        internal static string CommandHandler_Plugin_Disabled_Message {
            get {
                return ResourceManager.GetString("CommandHandler_Plugin_Disabled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die true;an;ein ähnelt.
        /// </summary>
        internal static string CommandHandler_Plugin_Enabled_Arguments {
            get {
                return ResourceManager.GetString("CommandHandler_Plugin_Enabled_Arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Der [command]-Command ist nun eingeschaltet ähnelt.
        /// </summary>
        internal static string CommandHandler_Plugin_Enabled_Message {
            get {
                return ResourceManager.GetString("CommandHandler_Plugin_Enabled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die messagebuffer ähnelt.
        /// </summary>
        internal static string ElementID_Messagebuffer {
            get {
                return ResourceManager.GetString("ElementID_Messagebuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die userlist ähnelt.
        /// </summary>
        internal static string ElementID_Userlist {
            get {
                return ResourceManager.GetString("ElementID_Userlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] ist seit [zeit] weg vom Schlüsselbrett ähnelt.
        /// </summary>
        internal static string Plugin_Afk_Message {
            get {
                return ResourceManager.GetString("Plugin_Afk_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] ist doch garnicht afk /allesfalsch ähnelt.
        /// </summary>
        internal static string Plugin_Afk_NotAfkMessage {
            get {
                return ResourceManager.GetString("Plugin_Afk_NotAfkMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /tarm;/armmoderiert;/armbernd;/sarm;/fritt ähnelt.
        /// </summary>
        internal static string Plugin_Armbernd_Messages {
            get {
                return ResourceManager.GetString("Plugin_Armbernd_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /wackel *Nur noch 10 Sekunden* zur Abstimmung für die Löschung der Videos von *[username]*! ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_10secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_10secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Ihr habt noch 30 Sekunden zum Voten ob die Videos von [username] aus der Playlist entfernt werden sollen ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_30secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_30secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Dieser Befehl funktioniert nicht gegen Mods. ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_ModMessage {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_ModMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Tut mir leid [username], das funktioniert pro User nur einmal am Tag /kdf ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_NotAgain_Message {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_NotAgain_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F2 - [username]&apos;s Videos besitzen überdurchschnittliche Qualität ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_Option_No {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_Option_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F1 - [username]&apos;s Videos will niemand sehen! ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_Option_Yes {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_Option_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aufräumen - Sollen alle Videos von [username] aus der Playlist entfernt werden? ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_QuestionMessage {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_QuestionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Es kam leider keine 2/3 Mehrheit für die Löschung zusammen /ka ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_VoteFailed {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_VoteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Poll erfolgreich, die Videos von [username] werden jetzt entfernt /soeinfach ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_VoteSuccess {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_VoteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /clean [username] ähnelt.
        /// </summary>
        internal static string Plugin_Aufraeumen_VoteSuccess_Command {
            get {
                return ResourceManager.GetString("Plugin_Aufraeumen_VoteSuccess_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die alle;jeder ähnelt.
        /// </summary>
        internal static string Plugin_Base_All_Argument {
            get {
                return ResourceManager.GetString("Plugin_Base_All_Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die sagt;meint;hat entschieden:;ist sich sicher: ähnelt.
        /// </summary>
        internal static string Plugin_Frage_Aussage {
            get {
                return ResourceManager.GetString("Plugin_Frage_Aussage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ja;ist sich da sicher;natürlich;jawohl;selbstverständlich;gewiss;freilich;diesmal ja;er stimmt zu;er hat das mit [username] besprochen und stimmt zu /:3;Nein;Niemals /finger;du willst es doch selber nicht;auf keinen Fall;negativ;NEIN!;NIEMALS! /allesfalsch;keineswegs;unter keinen Umständen;ist sich mit [username] darüber einig geworden: Nein. /finger;den Fehler hat [username] schon gemacht, nein.;Vielleicht /ka;nur wenn es dem Führer dient /tadolf;er ist sich nicht sicher;frag lieber [username] /ka;das ist  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Plugin_Frage_Messages {
            get {
                return ResourceManager.GetString("Plugin_Frage_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] hat heute noch kein Gas geschnüffelt. ähnelt.
        /// </summary>
        internal static string Plugin_Gas_0 {
            get {
                return ResourceManager.GetString("Plugin_Gas_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die gas ähnelt.
        /// </summary>
        internal static string Plugin_Gas_Trigger {
            get {
                return ResourceManager.GetString("Plugin_Gas_Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] wurde heute schon [anzahl] mal vergast! /gas ähnelt.
        /// </summary>
        internal static string Plugin_Gas_ü1 {
            get {
                return ResourceManager.GetString("Plugin_Gas_ü1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Leider wurde [username] heute noch nicht geknuddelt /kdf ähnelt.
        /// </summary>
        internal static string Plugin_Knuddelz_0 {
            get {
                return ResourceManager.GetString("Plugin_Knuddelz_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die knuddel ähnelt.
        /// </summary>
        internal static string Plugin_Knuddelz_Trigger {
            get {
                return ResourceManager.GetString("Plugin_Knuddelz_Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] wurde heute schon [knuddelzlevel] mal geknuddelt, zuletzt von [knuddelzvon] /:3 ähnelt.
        /// </summary>
        internal static string Plugin_Knuddelz_ü1 {
            get {
                return ResourceManager.GetString("Plugin_Knuddelz_ü1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /lauerstein;/lstein;/prinzessin;/jude;/homo;/lspepe ähnelt.
        /// </summary>
        internal static string Plugin_Lauerstein_Messages {
            get {
                return ResourceManager.GetString("Plugin_Lauerstein_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] wurde heute schon [anzahl] mal geleckt, zuletzt von [zuletztvon] /frosch ähnelt.
        /// </summary>
        internal static string Plugin_Lecken_Message {
            get {
                return ResourceManager.GetString("Plugin_Lecken_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] wurde heute noch nicht abgeleckt.  ähnelt.
        /// </summary>
        internal static string Plugin_Lecken_Message_Count0 {
            get {
                return ResourceManager.GetString("Plugin_Lecken_Message_Count0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die leckt;schleckt;schlabbert;züngelt;kostet;lecki;lecken ähnelt.
        /// </summary>
        internal static string Plugin_Lecken_Trigger {
            get {
                return ResourceManager.GetString("Plugin_Lecken_Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /wackel AUFGEPASST! [username] IST 100%IG METT! /ohgott /angst ähnelt.
        /// </summary>
        internal static string Plugin_Mett_100 {
            get {
                return ResourceManager.GetString("Plugin_Mett_100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 20-30 ähnelt.
        /// </summary>
        internal static string Plugin_Mett_StartBetween {
            get {
                return ResourceManager.GetString("Plugin_Mett_StartBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die mett;pissdich;kloppe;zyklon;zorn;mopc;reee;gas;skibbe;weiter;säge ähnelt.
        /// </summary>
        internal static string Plugin_Mett_Trigger {
            get {
                return ResourceManager.GetString("Plugin_Mett_Trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] ist zu *[mettlevel]%* Mett /klach ähnelt.
        /// </summary>
        internal static string Plugin_Mett_über80 {
            get {
                return ResourceManager.GetString("Plugin_Mett_über80", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] ist zu /wackel *[mettlevel]%* Mett /angst ähnelt.
        /// </summary>
        internal static string Plugin_Mett_über90 {
            get {
                return ResourceManager.GetString("Plugin_Mett_über90", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] ist zu [mettlevel]% Mett ähnelt.
        /// </summary>
        internal static string Plugin_Mett_unter80 {
            get {
                return ResourceManager.GetString("Plugin_Mett_unter80", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /dada;/dudu;/faded;/2faded;/molstoss;/dädä;/bäbä;/tdädä;/bada;/badi;/baba;/bebe;/bapa;/lulu;/uaah;/düdü;/dadi;/molnom;/molnar ähnelt.
        /// </summary>
        internal static string Plugin_Molnar_Emotes {
            get {
                return ResourceManager.GetString("Plugin_Molnar_Emotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /wackel *Achtung* liebe/r [username], deine Pizza ist fertig! /:3 ähnelt.
        /// </summary>
        internal static string Plugin_Pizza_Trigger_Message {
            get {
                return ResourceManager.GetString("Plugin_Pizza_Trigger_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Der Poll von [username] läuft noch 30 Sekunden ähnelt.
        /// </summary>
        internal static string Plugin_Poll_10secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Poll_10secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me *Achtung:* Der Poll von [username] läuft nur noch 10 Sekunden! ähnelt.
        /// </summary>
        internal static string Plugin_Poll_30secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Poll_30secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me du hast dein Poll-Kontingent für heute bereits verbraucht [username] /feelseh ähnelt.
        /// </summary>
        internal static string Plugin_Poll_NoMoreVotesMessage {
            get {
                return ResourceManager.GetString("Plugin_Poll_NoMoreVotesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string Plugin_Poll_PollsPerDay {
            get {
                return ResourceManager.GetString("Plugin_Poll_PollsPerDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] scheint nüchtern zu sein /3dwat ähnelt.
        /// </summary>
        internal static string Plugin_Promille_Message_0 {
            get {
                return ResourceManager.GetString("Plugin_Promille_Message_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] hat einen Alkoholpegel von [promille]‰ [saufemote] ähnelt.
        /// </summary>
        internal static string Plugin_Promille_Message_ü01 {
            get {
                return ResourceManager.GetString("Plugin_Promille_Message_ü01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 5 ähnelt.
        /// </summary>
        internal static string Plugin_Promille_Time {
            get {
                return ResourceManager.GetString("Plugin_Promille_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die prost;trinken ähnelt.
        /// </summary>
        internal static string Plugin_Promille_TriggerWords {
            get {
                return ResourceManager.GetString("Plugin_Promille_TriggerWords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [username] möchte ein Spielchen Roulette starten! Teilnehmen mit &quot;dabei&quot;. Benötigt mindestens [minplayercount] Spieler zum spielen! ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_Begrüßung {
            get {
                return ResourceManager.GetString("Plugin_Roulette_Begrüßung", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /kick [username] BOOM HEADSHOT! ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_Hit_Message {
            get {
                return ResourceManager.GetString("Plugin_Roulette_Hit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_MinPlayerCount {
            get {
                return ResourceManager.GetString("Plugin_Roulette_MinPlayerCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me es kamen nicht genug Spieler für Roulette zusammen ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_NoPlayer {
            get {
                return ResourceManager.GetString("Plugin_Roulette_NoPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tut mir Leid [username], das funktioniert nur einmal alle [timeout] Minuten pro User ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_NotAgain_Message {
            get {
                return ResourceManager.GetString("Plugin_Roulette_NotAgain_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die dabei ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_Register_Command {
            get {
                return ResourceManager.GetString("Plugin_Roulette_Register_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 60 ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_UserTimeout {
            get {
                return ResourceManager.GetString("Plugin_Roulette_UserTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [username] ist dabei! /kongo ähnelt.
        /// </summary>
        internal static string Plugin_Roulette_YoureIn_Message {
            get {
                return ResourceManager.GetString("Plugin_Roulette_YoureIn_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /lahey;/stoss;/saufi;/saufen;/wein;/lüning;/stollschluck;/schluck;/tschluck;/tadler;/schunkel;/bebe;/kirk ähnelt.
        /// </summary>
        internal static string Plugin_Saufen_Emotes {
            get {
                return ResourceManager.GetString("Plugin_Saufen_Emotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me sagt [username] muss saufen! [emote] ähnelt.
        /// </summary>
        internal static string Plugin_Saufen_Message {
            get {
                return ResourceManager.GetString("Plugin_Saufen_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me hat [username] aus allen zum saufen gewählt! [emote] ähnelt.
        /// </summary>
        internal static string Plugin_Saufen_Message_alle {
            get {
                return ResourceManager.GetString("Plugin_Saufen_Message_alle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me ist ebenfalls der Meinung jeder sollte saufen! [emote] Jetzt! ähnelt.
        /// </summary>
        internal static string Plugin_Saufen_Message_jeder {
            get {
                return ResourceManager.GetString("Plugin_Saufen_Message_jeder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /2opc;/opc;/finger ähnelt.
        /// </summary>
        internal static string Plugin_Soli_Messages {
            get {
                return ResourceManager.GetString("Plugin_Soli_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ARSCHFOTZE;WOHHJA HURENSOHN;STRICHER;FRAU FICKERIN;FOTZENKUCHEN;HALTDIEFRESSE;HURRENSON;FOTZENARSCH;BLÖDICH FICK DICH INNE;AUS UNSERER WERBUNG;Ü-Ü-Ü-ÜBERFALL;YAHOOO;NUTTENSTRICHER;FRAU HURENSOHN FICKER;FRIDI ARSCHMETT;H-HEIL HITLER DU NUTTE;AHUUU ARSCHLOCH;PENISFLEISCH IN DEINEN ARSCH;RAINER WINKLER;ARSCHHURRENSON;WALGESICHT;HAST&apos;N ARSCHLOCH UND DUMM ZU SEIN DU HÄSSLICHES STÜCK;IHR DUMMEN KELLERKINDER UND NICHTSFICKER OHNE STROM!;ANTIPAZI-ARSCHMETT;DRECKSAU;PISSDICHALDE;Was der dicke Thomas wohl da sagte!;H [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Plugin_Tourette_Messages {
            get {
                return ResourceManager.GetString("Plugin_Tourette_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 354;99263;99265;110785;3792;51838;50;74;32035;22639;115234;83536;30;86;1904;114738;62835;69;243;115233;4057;97855;27602;97856;90129;84608;58127;123171;112288;49106;116625;973;33;111700;73;46248;58135;114835;102242;62834;110735;110734;20;4339;360;42;65;117701;244;48;98562;32;112291;116942;3632;20225;68;30259;357;46881;112290;/mote/169;/mote/114836;/mote/15s;/mote/26s;/mote/9803;/mote/25s;/mote/74510;/mote/55338;/mote/70433;/mote/81997;1902;40;1901;41;30134;35063;81636;68856;28;29;110009;45;90075;44;34875;587 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Plugin_Twitch_Emotes {
            get {
                return ResourceManager.GetString("Plugin_Twitch_Emotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die https://static-cdn.jtvnw.net/emoticons/v1/[emoteNo]/1.0 ähnelt.
        /// </summary>
        internal static string Plugin_Twitch_Url {
            get {
                return ResourceManager.GetString("Plugin_Twitch_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /wackel *Nur noch 10 Sekunden* zur Votekick-Abstimmung gegen *[username]*!   ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_10secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Votekick_10secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Ihr habt noch 30 Sekunden zum Voten ob [username] abgeschoben werden soll ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_30secondsMessage {
            get {
                return ResourceManager.GetString("Plugin_Votekick_30secondsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me es gab keine Mehrheit [username] abzuschieben. /2wat ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickMessage_VoteFailed {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickMessage_VoteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /4marsch /5marsch *Kickvote erfolgreich! [username] wird abgeschoben[mutemessage]! * /6marsch /7marsch ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickMessage_VoteSuccess {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickMessage_VoteSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F2 - [username] muss bleiben! ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_No {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F1 - [username] muss abgeschoben werden! ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_Yes {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /kick [username] Votekick passed, AB INS KZ MIT DIR DU JUDE!  ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_Yes_KickCommand {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_Yes_KickCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /mute [username] ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_Yes_muteCommand {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_Yes_muteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /unmute [username] ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_Yes_unmuteCommand {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_Yes_unmuteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me [username] wurde wieder unmuted ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_KickOption_Yes_unmuteMessage {
            get {
                return ResourceManager.GetString("Plugin_Votekick_KickOption_Yes_unmuteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Moderatoren (und ich) können nicht gekickt werden /soeinfach ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_ModKickMessage {
            get {
                return ResourceManager.GetString("Plugin_Votekick_ModKickMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_MuteTimeInMin {
            get {
                return ResourceManager.GetString("Plugin_Votekick_MuteTimeInMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me Kickvote ist für dich erstmal nicht mehr verfügbar [username]. /bum ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_NotAgain_Message {
            get {
                return ResourceManager.GetString("Plugin_Votekick_NotAgain_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Votekick - Soll [username] abgeschoben werden? ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_QuestionMessage {
            get {
                return ResourceManager.GetString("Plugin_Votekick_QuestionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 60 ähnelt.
        /// </summary>
        internal static string Plugin_Votekick_UserVote_Timeout {
            get {
                return ResourceManager.GetString("Plugin_Votekick_UserVote_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die https://i.imgur.com/6suMRac.jpg;https://i.imgur.com/DOYlt8X.png;https://i.imgur.com/kzM53KX.gif;https://i.imgur.com/61Zd9Ux.gif;https://i.imgur.com/raXkVLo.gif;https://i.imgur.com/MhFfbeA.gif;https://i.imgur.com/TaaB6B8.gif;https://i.imgur.com/eHDbVIY.gif;https://i.imgur.com/tdMwLql.gif;https://i.imgur.com/ZjnaBDR.gif;https://i.imgur.com/MDu2cQW.jpg;https://i.imgur.com/0SamAWp.gif;https://i.imgur.com/di0f6TD.gif;https://i.imgur.com/fZtPgiZ.gif;https://i.imgur.com/Wesha0X.gif;https://i.imgur.com/1dRzBTB.gif; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Plugin_Werbung_Images {
            get {
                return ResourceManager.GetString("Plugin_Werbung_Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me hat für [username] eine [zahl] gewürfelt! ähnelt.
        /// </summary>
        internal static string Plugin_Würfel_Message {
            get {
                return ResourceManager.GetString("Plugin_Würfel_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me hat für [username] eine [zahl] gewürfelt! /feelsbad ähnelt.
        /// </summary>
        internal static string Plugin_Würfel_Message_1 {
            get {
                return ResourceManager.GetString("Plugin_Würfel_Message_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me hat für [username] eine [zahl] gewürfelt! /nice ähnelt.
        /// </summary>
        internal static string Plugin_Würfel_Message_6 {
            get {
                return ResourceManager.GetString("Plugin_Würfel_Message_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End Poll ähnelt.
        /// </summary>
        internal static string PollHandler_ClosePoll_Button_Text {
            get {
                return ResourceManager.GetString("PollHandler_ClosePoll_Button_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /me /störung Es ist auf einmal kein aktiver Poll mehr vorhanden, hat wohl ein Mod vorzeitig beendet. Kann das Ergebnis so nicht auslesen /ka ähnelt.
        /// </summary>
        internal static string PollHandler_Error_NoActivePollFound {
            get {
                return ResourceManager.GetString("PollHandler_Error_NoActivePollFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die option ähnelt.
        /// </summary>
        internal static string PollHandler_Option_Class {
            get {
                return ResourceManager.GetString("PollHandler_Option_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die well active ähnelt.
        /// </summary>
        internal static string PollHandler_Poll_Active_Class {
            get {
                return ResourceManager.GetString("PollHandler_Poll_Active_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die well muted ähnelt.
        /// </summary>
        internal static string PollHandler_Poll_NotActive_Class {
            get {
                return ResourceManager.GetString("PollHandler_Poll_NotActive_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die pollwrap ähnelt.
        /// </summary>
        internal static string PollHandler_Pollbox_ID {
            get {
                return ResourceManager.GetString("PollHandler_Pollbox_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /arier;/bardy;/bateman;/bear;/drache;/ecchi;/eistanz;/frösch;/gir;/herzkadsi;/hitlör;/miku;/mjtanz;/mäggüs;/psprölö;/pädö;/sprölö;/ssprölö;/tspurdo;/tanzi;/tswag ähnelt.
        /// </summary>
        internal static string Tanzis {
            get {
                return ResourceManager.GetString("Tanzis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die chatline ähnelt.
        /// </summary>
        internal static string TextboxID_Chatbox {
            get {
                return ResourceManager.GetString("TextboxID_Chatbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die password ähnelt.
        /// </summary>
        internal static string TextboxID_Login_Password {
            get {
                return ResourceManager.GetString("TextboxID_Login_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die username ähnelt.
        /// </summary>
        internal static string TextboxID_Login_Username {
            get {
                return ResourceManager.GetString("TextboxID_Login_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die userlist_afk ähnelt.
        /// </summary>
        internal static string UserlistWrapper_Userlist_AfkUser_Class {
            get {
                return ResourceManager.GetString("UserlistWrapper_Userlist_AfkUser_Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die userlist_item ähnelt.
        /// </summary>
        internal static string UserlistWrapper_Userlist_Item_Class {
            get {
                return ResourceManager.GetString("UserlistWrapper_Userlist_Item_Class", resourceCulture);
            }
        }
    }
}
